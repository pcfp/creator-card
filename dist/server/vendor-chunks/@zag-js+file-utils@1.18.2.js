"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@zag-js+file-utils@1.18.2";
exports.ids = ["vendor-chunks/@zag-js+file-utils@1.18.2"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@zag-js+file-utils@1.18.2/node_modules/@zag-js/file-utils/dist/index.mjs":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@zag-js+file-utils@1.18.2/node_modules/@zag-js/file-utils/dist/index.mjs ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dataURItoBlob: () => (/* binding */ dataURItoBlob),\n/* harmony export */   downloadFile: () => (/* binding */ downloadFile),\n/* harmony export */   getAcceptAttrString: () => (/* binding */ getAcceptAttrString),\n/* harmony export */   getFileDataUrl: () => (/* binding */ getFileDataUrl),\n/* harmony export */   getFileEntries: () => (/* binding */ getFileEntries),\n/* harmony export */   getTotalFileSize: () => (/* binding */ getTotalFileSize),\n/* harmony export */   isFileEqual: () => (/* binding */ isFileEqual),\n/* harmony export */   isValidFileSize: () => (/* binding */ isValidFileSize),\n/* harmony export */   isValidFileType: () => (/* binding */ isValidFileType)\n/* harmony export */ });\n// src/data-transfer.ts\nvar getItemEntry = (item) => typeof item.getAsEntry === \"function\" ? item.getAsEntry() : typeof item.webkitGetAsEntry === \"function\" ? item.webkitGetAsEntry() : null;\nvar isDirectoryEntry = (entry) => entry.isDirectory;\nvar isFileEntry = (entry) => entry.isFile;\nvar addRelativePath = (file, path) => {\n  Object.defineProperty(file, \"relativePath\", { value: path ? `${path}/${file.name}` : file.name });\n  return file;\n};\nvar getFileEntries = (items, traverseDirectories) => Promise.all(\n  Array.from(items).filter((item) => item.kind === \"file\").map((item) => {\n    const entry = getItemEntry(item);\n    if (!entry) return null;\n    if (isDirectoryEntry(entry) && traverseDirectories) {\n      return getDirectoryFiles(entry.createReader(), `${entry.name}`);\n    }\n    if (isFileEntry(entry)) {\n      return new Promise((resolve) => {\n        entry.file((file) => {\n          resolve(addRelativePath(file, \"\"));\n        });\n      });\n    }\n  }).filter((b) => b)\n);\nvar getDirectoryFiles = (reader, path = \"\") => new Promise((resolve) => {\n  const entryPromises = [];\n  const readDirectoryEntries = () => {\n    reader.readEntries((entries) => {\n      if (entries.length === 0) {\n        resolve(Promise.all(entryPromises).then((entries2) => entries2.flat()));\n        return;\n      }\n      const promises = entries.map((entry) => {\n        if (!entry) return null;\n        if (isDirectoryEntry(entry)) {\n          return getDirectoryFiles(entry.createReader(), `${path}${entry.name}`);\n        }\n        if (isFileEntry(entry)) {\n          return new Promise((resolve2) => {\n            entry.file((file) => {\n              resolve2(addRelativePath(file, path));\n            });\n          });\n        }\n      }).filter((b) => b);\n      entryPromises.push(Promise.all(promises));\n      readDirectoryEntries();\n    });\n  };\n  readDirectoryEntries();\n});\n\n// src/data-url-to-blob.ts\nfunction dataURItoBlob(uri) {\n  const binary = atob(uri.split(\",\")[1]);\n  const mimeString = uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n  const buffer = new ArrayBuffer(binary.length);\n  const intArray = new Uint8Array(buffer);\n  for (let i = 0; i < binary.length; i++) {\n    intArray[i] = binary.charCodeAt(i);\n  }\n  return new Blob([buffer], { type: mimeString });\n}\n\n// src/download-file.ts\nvar BOM_REGEX = /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i;\nvar MAC_REGEX = /Macintosh/;\nvar APPLE_WEBKIT_REGEX = /AppleWebKit/;\nvar SAFARI_REGEX = /Safari/;\nfunction getBlob(blobOrString, type, appendBOM) {\n  let blob = typeof blobOrString === \"string\" ? new Blob([blobOrString], { type }) : blobOrString;\n  if (appendBOM && BOM_REGEX.test(blob.type)) {\n    return new Blob([String.fromCharCode(65279), blob], { type: blob.type });\n  }\n  return blob;\n}\nfunction isMSEdge(win) {\n  return Boolean(win.navigator && win.navigator.msSaveOrOpenBlob);\n}\nfunction isWebView(win) {\n  return win.navigator && MAC_REGEX.test(win.navigator.userAgent) && APPLE_WEBKIT_REGEX.test(win.navigator.userAgent) && !SAFARI_REGEX.test(win.navigator.userAgent);\n}\nfunction downloadFile(options) {\n  const { file, win = window, type, name, appendBOM, revokeTimeout = 0 } = options;\n  const doc = win.document;\n  const blob = getBlob(file, type, appendBOM);\n  const fileName = (file instanceof File ? name || file.name : name) || \"file-download\";\n  if (isMSEdge(win)) {\n    win.navigator.msSaveOrOpenBlob(blob, fileName);\n    return;\n  }\n  const isMacOSWebView = isWebView(win);\n  const anchor = doc.createElement(\"a\");\n  const canUseDownload = \"download\" in anchor && !isMacOSWebView;\n  if (canUseDownload) {\n    const url2 = win.URL.createObjectURL(blob);\n    anchor.href = url2;\n    anchor.rel = \"noopener\";\n    anchor.download = fileName;\n    anchor.style.display = \"none\";\n    doc.body.appendChild(anchor);\n    anchor.dispatchEvent(new win.MouseEvent(\"click\"));\n    setTimeout(() => {\n      win.URL.revokeObjectURL(url2);\n      anchor.remove();\n    }, revokeTimeout);\n    return;\n  }\n  const url = win.URL.createObjectURL(blob);\n  const popup = win.open(url, \"_blank\");\n  if (!popup) {\n    win.location.href = url;\n  }\n  setTimeout(() => {\n    win.URL.revokeObjectURL(url);\n  }, revokeTimeout);\n}\n\n// src/get-accept-attr.ts\nfunction isMIMEType(v) {\n  return v === \"audio/*\" || v === \"video/*\" || v === \"image/*\" || v === \"text/*\" || /\\w+\\/[-+.\\w]+/g.test(v);\n}\nfunction isExt(v) {\n  return /^.*\\.[\\w]+$/.test(v);\n}\nvar isValidMIME = (v) => isMIMEType(v) || isExt(v);\nfunction getAcceptAttrString(accept) {\n  if (accept == null) return;\n  if (typeof accept === \"string\") {\n    return accept;\n  }\n  if (Array.isArray(accept)) {\n    return accept.filter(isValidMIME).join(\",\");\n  }\n  return Object.entries(accept).reduce((a, [mimeType, ext]) => [...a, mimeType, ...ext], []).filter(isValidMIME).join(\",\");\n}\n\n// src/get-file-data-url.ts\nvar getFileDataUrl = async (file) => {\n  const reader = new FileReader();\n  return new Promise((resolve, reject) => {\n    reader.onerror = () => {\n      reader.abort();\n      reject(new Error(\"There was an error reading a file\"));\n    };\n    reader.onloadend = () => {\n      const { result } = reader;\n      if (result instanceof ArrayBuffer) {\n        reject(new Error(\"Expected DataURL as string from Blob/File, got ArrayBuffer\"));\n      } else {\n        resolve(result || void 0);\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n};\n\n// src/get-total-file-size.ts\nvar getTotalFileSize = (files) => {\n  return files.reduce((acc, file) => acc + file.size, 0);\n};\n\n// src/is-file-equal.ts\nvar isFileEqual = (file1, file2) => {\n  return file1.name === file2.name && file1.size === file2.size && file1.type === file2.type;\n};\n\n// src/is-valid-file-size.ts\nvar isDefined = (v) => v !== void 0 && v !== null;\nfunction isValidFileSize(file, minSize, maxSize) {\n  if (isDefined(file.size)) {\n    if (isDefined(minSize) && isDefined(maxSize)) {\n      if (file.size > maxSize) return [false, \"FILE_TOO_LARGE\"];\n      if (file.size < minSize) return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(minSize) && file.size < minSize) {\n      return [false, \"FILE_TOO_SMALL\"];\n    } else if (isDefined(maxSize) && file.size > maxSize) {\n      return [false, \"FILE_TOO_LARGE\"];\n    }\n  }\n  return [true, null];\n}\n\n// src/is-valid-file-type.ts\nfunction isFileAccepted(file, accept) {\n  if (file && accept) {\n    const types = Array.isArray(accept) ? accept : typeof accept === \"string\" ? accept.split(\",\") : [];\n    if (types.length === 0) return true;\n    const fileName = file.name || \"\";\n    const mimeType = (file.type || \"\").toLowerCase();\n    const baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    return types.some((type) => {\n      const validType = type.trim().toLowerCase();\n      if (validType.charAt(0) === \".\") {\n        return fileName.toLowerCase().endsWith(validType);\n      }\n      if (validType.endsWith(\"/*\")) {\n        return baseMimeType === validType.replace(/\\/.*$/, \"\");\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n}\nfunction isValidFileType(file, accept) {\n  const isAcceptable = file.type === \"application/x-moz-file\" || isFileAccepted(file, accept);\n  return [isAcceptable, isAcceptable ? null : \"FILE_INVALID_TYPE\"];\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@zag-js+file-utils@1.18.2/node_modules/@zag-js/file-utils/dist/index.mjs\n");

/***/ })

};
;